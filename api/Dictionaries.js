const emoji = require('node-emoji')

const emojiDict = {
  " ": "  ",
  "a": emoji.get('alembic') +  ' ',
  "b": emoji.get('bamboo') +  ' ',
  "c": emoji.get('curry') +  ' ',
  "d": emoji.get('small_orange_diamond') +  ' ',
  "e": emoji.get('electric_plug') +  ' ',
  "f": emoji.get('lower_left_fountain_pen') +  ' ',
  "g": emoji.get('grapes') +  ' ',
  "h": emoji.get('hibiscus') +  ' ',
  "i": emoji.get('imp') +  ' ',
  "j": emoji.get('jack_o_lantern') +  ' ',
  "k": emoji.get('key') +  ' ',
  "l": emoji.get('label') +  ' ',
  "m": emoji.get('new_moon') +  ' ',
  "n": emoji.get('no_entry_sign') +  ' ',
  "o": emoji.get('oil_drum') +  ' ',
  "p": emoji.get('postbox') +  ' ',
  "q": emoji.get('question') +  ' ',
  "r": emoji.get('radioactive_sign') +  ' ',
  "s": emoji.get('sandal') +  ' ',
  "t": emoji.get('telescope') +  ' ',
  "u": emoji.get('umbrella') +  ' ',
  "v": emoji.get('volcano') +  ' ',
  "w": emoji.get('wavy_dash') +  ' ',
  "x": emoji.get('x') +  ' ',
  "y": emoji.get('yum') +  ' ',
  "z": emoji.get('zzz') +  ' ',
  "\!": emoji.get('bangbang'),
}

const upsideDownBack = {
    "a": '\u0250',
	  "b": 'q',
	  "c": '\u0254',
	  "d": 'p',
	  "e": '\u01DD',
	  "f": '\u025F', 
	  "g": 'b',
	  "h": '\u0265',
    "i": '\u0131',
    "j": '\u0638',
	  "k": '\u029E',
	  "l": '1',
    "m": '\u026F',
	  "n": 'u',
	  "o": 'o',
	  "p": 'd',
	  "q": 'b',
	  "r": '\u0279',
	  "s": 's',
	  "t": '\u0287',
	  "u": 'n',
	  "v": '\u028C',
	  "w": '\u028D',
    "x": 'x',
    "y": '\u028E',
	  "z": 'z',
}
const morseCode = {
    " ": "  ",
    "a": '._ ',
	  "b": '_... ',
	  "c": '_._. ',
	  "d": '_.. ',
	  "e": '. ',
	  "f": '.._.' , 
	  "g": '__. ',
	  "h": '.... ',
    "i": '.. ',
    "j": '.___ ',
	  "k": '_._ ',
	  "l": '._.. ',
    "m": '__ ',
	  "n": '_. ',
	  "o": '___ ',
	  "p": '.__. ',
	  "q": '__._ ',
	  "r": '._. ',
	  "s": '... ',
	  "t": '_ ',
	  "u": '.._ ',
	  "v": '..._ ',
	  "w": '.__ ',
    "x": '_.._ ',
    "y": '_.__ ',
    "z": '__.. ',
    "1": '.____ ',
    "2": '..___ ',
    "3": '...__ ',
    "4": '...._ ',
    "5": '..... ',
    "6": '_.... ',
    "7": '__... ',
    "8": '___.. ',
    "9": '____. ',
    "0": '_____ ',
}

const kristaCode = {
  " ": "  ",
  "a": '->> ',
  "b": '^>> ',
  "c": '>^> ',
  "d": '>>^ ',
  "e": '>>- ',
  "f": '>>_ ', 
  "g": '>_> ',
  "h": '_>> ',
  "i": '^>_ ',
  "j": '^>_ ',
  "k": '>:> ',
  "l": '_>^ ',
  "m": '->- ',
  "n": ':>> ',
  "o": '^>^ ',
  "p": '>>: ',
  "q": '_>_ ',
  "r": ':>_ ',
  "s": '-:> ',
  "t": ':>^ ',
  "u": '-^- ',
  "v": '-^- ',
  "w": '^>: ',
  "x": '>:- ',
  "y": '_>: ',
  "z": '-_- ',
}

const hacker = {
  "a": '@',
  "b": '8',
  "c": '<',
  "d": 'D',
  "e": '3',
  "f": 'ph', 
  "g": '6',
  "h": '#',
  "i": '!',
  "j": 'J',
  "k": '|{',
  "l": '1',
  "m": '|\\\\|',
  "n": '^',
  "o": '0',
  "p": '|2',
  "q": '9',
  "r": '|?',
  "s": '$',
  "t": '7',
  "u": 'U',
  "v": 'V',
  "w": '\\^/',
  "x": 'X',
  "y": 'j',
  "z": '2',
}

const chaser = {
  "a": '',
  "b": '',
  "c": '',
  "d": '',
  "e": '',
  "f": '', 
  "g": '',
  "h": '',
  "i": '',
  "j": '',
  "k": '',
  "l": '',
  "m": '',
  "n": '',
  "o": 'U+1CC2',
  "p": '',
  "q": '',
  "r": '',
  "s": '',
  "t": '',
  "u": '',
  "v": '',
  "w": '',
  "x": '',
  "y": '',
  "z": '',
}
const googleLanguageList = [
  { code: 'af', name: 'Afrikaans' },
  { code: 'sq', name: 'Albanian' },
  { code: 'am', name: 'Amharic' },
  { code: 'ar', name: 'Arabic' },
  { code: 'hy', name: 'Armenian' },
  { code: 'az', name: 'Azerbaijani' },
  { code: 'eu', name: 'Basque' },
  { code: 'be', name: 'Belarusian' },
  { code: 'bn', name: 'Bengali' },
  { code: 'bs', name: 'Bosnian' },
  { code: 'bg', name: 'Bulgarian' },
  { code: 'ca', name: 'Catalan' },
  { code: 'ceb', name: 'Cebuano' },
  { code: 'ny', name: 'Chichewa' },
  { code: 'zh', name: 'Chinese (Simplified)' },
  { code: 'zh-TW', name: 'Chinese (Traditional)' },
  { code: 'co', name: 'Corsican' },
  { code: 'hr', name: 'Croatian' },
  { code: 'cs', name: 'Czech' },
  { code: 'da', name: 'Danish' },
  { code: 'nl', name: 'Dutch' },
  { code: 'en', name: 'English' },
  { code: 'eo', name: 'Esperanto' },
  { code: 'et', name: 'Estonian' },
  { code: 'tl', name: 'Filipino' },
  { code: 'fi', name: 'Finnish' },
  { code: 'fr', name: 'French' },
  { code: 'fy', name: 'Frisian' },
  { code: 'gl', name: 'Galician' },
  { code: 'ka', name: 'Georgian' },
  { code: 'de', name: 'German' },
  { code: 'el', name: 'Greek' },
  { code: 'gu', name: 'Gujarati' },
  { code: 'ht', name: 'Haitian Creole' },
  { code: 'ha', name: 'Hausa' },
  { code: 'haw', name: 'Hawaiian' },
  { code: 'iw', name: 'Hebrew' },
  { code: 'hi', name: 'Hindi' },
  { code: 'hmn', name: 'Hmong' },
  { code: 'hu', name: 'Hungarian' },
  { code: 'is', name: 'Icelandic' },
  { code: 'ig', name: 'Igbo' },
  { code: 'id', name: 'Indonesian' },
  { code: 'ga', name: 'Irish' },
  { code: 'it', name: 'Italian' },
  { code: 'ja', name: 'Japanese' },
  { code: 'jw', name: 'Javanese' },
  { code: 'kn', name: 'Kannada' },
  { code: 'kk', name: 'Kazakh' },
  { code: 'km', name: 'Khmer' },
  { code: 'ko', name: 'Korean' },
  { code: 'ku', name: 'Kurdish (Kurmanji)' },
  { code: 'ky', name: 'Kyrgyz' },
  { code: 'lo', name: 'Lao' },
  { code: 'la', name: 'Latin' },
  { code: 'lv', name: 'Latvian' },
  { code: 'lt', name: 'Lithuanian' },
  { code: 'lb', name: 'Luxembourgish' },
  { code: 'mk', name: 'Macedonian' },
  { code: 'mg', name: 'Malagasy' },
  { code: 'ms', name: 'Malay' },
  { code: 'ml', name: 'Malayalam' },
  { code: 'mt', name: 'Maltese' },
  { code: 'mi', name: 'Maori' },
  { code: 'mr', name: 'Marathi' },
  { code: 'mn', name: 'Mongolian' },
  { code: 'my', name: 'Myanmar (Burmese)' },
  { code: 'ne', name: 'Nepali' },
  { code: 'no', name: 'Norwegian' },
  { code: 'ps', name: 'Pashto' },
  { code: 'fa', name: 'Persian' },
  { code: 'pl', name: 'Polish' },
  { code: 'pt', name: 'Portuguese' },
  { code: 'pa', name: 'Punjabi' },
  { code: 'ro', name: 'Romanian' },
  { code: 'ru', name: 'Russian' },
  { code: 'sm', name: 'Samoan' },
  { code: 'gd', name: 'Scots Gaelic' },
  { code: 'sr', name: 'Serbian' },
  { code: 'st', name: 'Sesotho' },
  { code: 'sn', name: 'Shona' },
  { code: 'sd', name: 'Sindhi' },
  { code: 'si', name: 'Sinhala' },
  { code: 'sk', name: 'Slovak' },
  { code: 'sl', name: 'Slovenian' },
  { code: 'so', name: 'Somali' },
  { code: 'es', name: 'Spanish' },
  { code: 'su', name: 'Sundanese' },
  { code: 'sw', name: 'Swahili' },
  { code: 'sv', name: 'Swedish' },
  { code: 'tg', name: 'Tajik' },
  { code: 'ta', name: 'Tamil' },
  { code: 'te', name: 'Telugu' },
  { code: 'th', name: 'Thai' },
  { code: 'tr', name: 'Turkish' },
  { code: 'uk', name: 'Ukrainian' },
  { code: 'ur', name: 'Urdu' },
  { code: 'uz', name: 'Uzbek' },
  { code: 'vi', name: 'Vietnamese' },
  { code: 'cy', name: 'Welsh' },
  { code: 'xh', name: 'Xhosa' },
  { code: 'yi', name: 'Yiddish' },
  { code: 'yo', name: 'Yoruba' },
  { code: 'zu', name: 'Zulu' },
]

const languages = {
  emojiDict,
  upsideDownBack,
  morseCode,
  kristaCode,
  hacker,
  googleLanguageList
}

/**
 * 
 * @param {String} text - The text that needs to be translated
 * @param {JSON} language  - The dictionary to be used to chage the characters or words in the text
 */
function translate(text, language) {
  String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.replace(new RegExp(search, 'g'), replacement);
  };
  let translation = text.toLocaleLowerCase()
  for (let char in language) {
    translation = translation.replaceAll(char, language[char])
  }
  return translation
}

const testText = 'The quick brown fox jumps over the lazy dog.'
const testLanguage = languages['hacker']

console.log(`Text: ${testText}`)
console.log(`Translation: ${translate(testText, testLanguage)}`)